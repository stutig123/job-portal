name: ðŸš€ Job Portal CI/CD

on:
  push:
    branches:
      - main

jobs:
  code_quality:
    name: ðŸ“Š Code Quality Check (SonarCloud)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run tests with coverage
        run: npm test -- --coverage || true

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install SonarQube Scanner
        run: |
          sudo apt-get update && sudo apt-get install -y unzip
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006.zip
          unzip sonar-scanner.zip
          mv sonar-scanner-5.0.1.3006 sonar-scanner
          chmod +x sonar-scanner/bin/sonar-scanner
          echo "$(pwd)/sonar-scanner/bin" >> $GITHUB_PATH

      - name: Run SonarCloud Scan
        run: |
          sonar-scanner \
            -Dsonar.projectKey=stutig123_job-portal \
            -Dsonar.organization=stutig123 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.sources=. \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.branch.name=main
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker_build:
    name: ðŸ›  Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: code_quality

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: stutigambhir/jobportal:latest

  deploy:
    name: ðŸš€ Deploy with Ansible
    runs-on: ubuntu-latest
    needs: docker_build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Ansible
        run: sudo apt update && sudo apt install -y ansible

      - name: Create SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > stuti-key.pem
          chmod 600 stuti-key.pem

      - name: Run Ansible Playbook
        run: |
          ansible-playbook ansible/playbook.yml -i ansible/inventory.ini --private-key stuti-key.pem -u ubuntu
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
